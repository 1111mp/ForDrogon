/**
 *
 *  RestfulFriendsCtrl.h
 *  This file is generated by drogon_ctl
 *
 */

#pragma once

#include <drogon/HttpController.h>
#include "RestfulFriendsCtrlBase.h"

#include "Friends.h"
using namespace drogon;
using namespace drogon_model::database_test;
/**
 * @brief this class is created by the drogon_ctl command.
 * this class is a restful API controller for reading and writing the friends table.
 */

class RestfulFriendsCtrl: public drogon::HttpController<RestfulFriendsCtrl>, public RestfulFriendsCtrlBase
{
  public:
    METHOD_LIST_BEGIN
    ADD_METHOD_TO(RestfulFriendsCtrl::getOne,"/friends/{1}",Get,Options);
    ADD_METHOD_TO(RestfulFriendsCtrl::updateOne,"/friends/{1}",Put,Options);
    ADD_METHOD_TO(RestfulFriendsCtrl::deleteOne,"/friends/{1}",Delete,Options);
    ADD_METHOD_TO(RestfulFriendsCtrl::get,"/friends",Get,Options);
    ADD_METHOD_TO(RestfulFriendsCtrl::create,"/friends",Post,Options);
    //ADD_METHOD_TO(RestfulFriendsCtrl::update,"/friends",Put,Options);
    METHOD_LIST_END
     
    void getOne(const HttpRequestPtr &req,
                std::function<void(const HttpResponsePtr &)> &&callback,
                Friends::PrimaryKeyType &&id);
    void updateOne(const HttpRequestPtr &req,
                   std::function<void(const HttpResponsePtr &)> &&callback,
                   Friends::PrimaryKeyType &&id);
    void deleteOne(const HttpRequestPtr &req,
                   std::function<void(const HttpResponsePtr &)> &&callback,
                   Friends::PrimaryKeyType &&id);
    void get(const HttpRequestPtr &req,
             std::function<void(const HttpResponsePtr &)> &&callback);
    void create(const HttpRequestPtr &req,
             std::function<void(const HttpResponsePtr &)> &&callback);

};
