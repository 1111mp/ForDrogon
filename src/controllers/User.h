/**
 *
 *  User.h
 *  This file is generated by drogon_ctl
 *
 */

#pragma once

#include <drogon/HttpController.h>
#include <drogon/orm/RestfulController.h>

#include "Users.h"
using namespace drogon;
using namespace drogon::orm;
using namespace drogon_model::database_test;
/**
 * @brief this class is created by the drogon_ctl command.
 * this class is a restful API controller for reading and writing the users table.
 */

namespace api::v1
{

  class User : public drogon::HttpController<User>, public RestfulController
  {
  public:
    METHOD_LIST_BEGIN
    METHOD_ADD(User::login, "/login", Post, Options);
    METHOD_LIST_END

    User()
        : RestfulController({"id",
                             "account",
                             "pwd",
                             "avatar",
                             "email",
                             "regisTime",
                             "updateTime"})
    {
      /**
       * The items in the vector are aliases of column names in the table.
       * if one item is set to an empty string, the related column is not sent
       * to clients.
       */
      enableMasquerading({
          "id",        // the alias for the id column.
          "account",   // the alias for the account column.
          "pwd",       // the alias for the pwd column.
          "avatar",    // the alias for the avatar column.
          "email",     // the alias for the email column.
          "regisTime", // the alias for the regisTime column.
          "updateTime" // the alias for the updateTime column.
      });
    }

    void login(const HttpRequestPtr &req, std::function<void(const HttpResponsePtr &)> &&callback);

  private:
    orm::DbClientPtr getDbClient()
    {
      return drogon::app().getDbClient(dbClientName_);
    }

    nosql::RedisClientPtr getRedisClient()
    {
      return drogon::app().getRedisClient(redieClientName_);
    }

  private:
    const std::string dbClientName_{"default"};
    const std::string redieClientName_{"default"};
  };

}
