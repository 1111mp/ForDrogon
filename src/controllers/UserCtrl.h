/**
 *
 *  UserCtrl.h
 *  This file is generated by drogon_ctl
 *
 */

#pragma once

#include <drogon/HttpController.h>

#include "Users.h"
using namespace drogon;
using namespace drogon::orm;
using namespace drogon_model::database_test;
/**
 * @brief this class is created by the drogon_ctl command.
 * this class is a restful API controller for reading and writing the users table.
 */

namespace api::v1
{

  class User : public drogon::HttpController<User>
  {
  public:
    METHOD_LIST_BEGIN
    METHOD_ADD(User::login, "/login", Post, Options);
    METHOD_ADD(User::logout, "/logout", Get, Options, "api::v1::filters::JwtFilter");
    METHOD_ADD(User::create, "", Post, Options);
    METHOD_ADD(User::deleteOne, "", Delete, Options, "api::v1::filters::JwtFilter");
    METHOD_ADD(User::updateOne, "", Put, Options, "api::v1::filters::JwtFilter");
    METHOD_ADD(User::getOne, "/{1}", Get, Options, "api::v1::filters::JwtFilter");
    METHOD_LIST_END

    Task<void> login(const HttpRequestPtr req, std::function<void(const HttpResponsePtr &)> callback);
    Task<void> logout(const HttpRequestPtr req, std::function<void(const HttpResponsePtr &)> callback);
    Task<void> create(const HttpRequestPtr req, std::function<void(const HttpResponsePtr &)> callback);
    Task<void> deleteOne(const HttpRequestPtr req, std::function<void(const HttpResponsePtr &)> callback);
    Task<void> updateOne(const HttpRequestPtr req, std::function<void(const HttpResponsePtr &)> callback);
    Task<void> getOne(const HttpRequestPtr req, std::function<void(const HttpResponsePtr &)> callback, Users::PrimaryKeyType id);

  private:
    orm::DbClientPtr getDbClient()
    {
      return drogon::app().getFastDbClient(dbClientName_);
    }

    nosql::RedisClientPtr getRedisClient()
    {
      return drogon::app().getFastRedisClient(redieClientName_);
    }

  private:
    const std::string dbClientName_{"default"};
    const std::string redieClientName_{"default"};
  };

}
