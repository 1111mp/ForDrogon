/**
 *
 *  RestfulNotifiesCtrl.h
 *  This file is generated by drogon_ctl
 *
 */

#pragma once

#include <drogon/HttpController.h>
#include "RestfulNotifiesCtrlBase.h"

#include "Notifies.h"
using namespace drogon;
using namespace drogon_model::database_test;
/**
 * @brief this class is created by the drogon_ctl command.
 * this class is a restful API controller for reading and writing the notifies table.
 */

class RestfulNotifiesCtrl: public drogon::HttpController<RestfulNotifiesCtrl>, public RestfulNotifiesCtrlBase
{
  public:
    METHOD_LIST_BEGIN
    ADD_METHOD_TO(RestfulNotifiesCtrl::getOne,"/notifies/{1}",Get,Options);
    ADD_METHOD_TO(RestfulNotifiesCtrl::updateOne,"/notifies/{1}",Put,Options);
    ADD_METHOD_TO(RestfulNotifiesCtrl::deleteOne,"/notifies/{1}",Delete,Options);
    ADD_METHOD_TO(RestfulNotifiesCtrl::get,"/notifies",Get,Options);
    ADD_METHOD_TO(RestfulNotifiesCtrl::create,"/notifies",Post,Options);
    //ADD_METHOD_TO(RestfulNotifiesCtrl::update,"/notifies",Put,Options);
    METHOD_LIST_END
     
    void getOne(const HttpRequestPtr &req,
                std::function<void(const HttpResponsePtr &)> &&callback,
                Notifies::PrimaryKeyType &&id);
    void updateOne(const HttpRequestPtr &req,
                   std::function<void(const HttpResponsePtr &)> &&callback,
                   Notifies::PrimaryKeyType &&id);
    void deleteOne(const HttpRequestPtr &req,
                   std::function<void(const HttpResponsePtr &)> &&callback,
                   Notifies::PrimaryKeyType &&id);
    void get(const HttpRequestPtr &req,
             std::function<void(const HttpResponsePtr &)> &&callback);
    void create(const HttpRequestPtr &req,
             std::function<void(const HttpResponsePtr &)> &&callback);

};
